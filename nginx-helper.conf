# NGINX Helper Configuration for word-doc-chatbot (sageapp04)
#
# This helper sits between the main NGINX and the Streamlit application.
#
# ARCHITECTURE:
# Main NGINX (aidemo.dcri.duke.edu)
#   → strips /sageapp04 prefix → proxies to 127.0.0.1:3004/
#       → nginx-helper (this config, listening on port 80 inside container)
#           → adds /sageapp04 prefix back → proxies to streamlit:8501/sageapp04/
#               → Streamlit app (configured with --server.baseUrlPath=/sageapp04)
#
# Main NGINX configuration (managed by IT):
# location = /sageapp04  { return 301 /sageapp04/; }
# location /sageapp04/  { proxy_pass http://127.0.0.1:3004/; }  # Trailing slash strips prefix
#
# TRAILING_SLASH_CHANGE: If IT changes main NGINX to keep the path prefix
# (removes trailing slash from proxy_pass), then this helper is NOT needed!
# See NGINX_DEPLOYMENT_GUIDE.md section "What If IT Removes the Trailing Slash?"
#
# This configuration handles both /sageapp04 and /sageapp04/ requests

server {
    listen 80;
    server_name _;

    # Receive requests at root path (from main NGINX after it strips /sageapp04)
    location / {
        # Add /sageapp04 prefix back before proxying to Streamlit
        # This rewrite changes:  /some/path → /sageapp04/some/path
        rewrite ^/(.*)$ /sageapp04/$1 break;

        # Proxy to Streamlit application (replace with actual hostname in Docker)
        # In standalone mode: proxy_pass http://127.0.0.1:8501;
        # In Docker mode: proxy_pass http://word-doc-chatbot-frontend:8501;
        proxy_pass http://127.0.0.1:8501;

        # WebSocket support (required for Streamlit)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Standard reverse proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Streamlit-specific settings
        proxy_buffering off;
        proxy_read_timeout 86400;  # 24 hours for long-running operations
    }

    # Health check endpoint (optional, for monitoring)
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}
